---
name: dps-chronicle
description: Denops Chronicle
---

=pod

=head1 dps-chronicle

Denops Chronicle

=head1 Features X<chronicle-features>

dps-chronicle is a Vim plugin that record opened files and saved files in the specified path.

=head1 Installation X<chronicle-installation>

If you use L<folke/lazy.nvim|https://github.com/folke/lazy.nvim>.

  {
    "yukimemi/dps-chronicle",
    lazy = false,
    dependencies = {
      "vim-denops/denops.vim",
    },
  }

If you use L<yukimemi/dvpm|https://github.com/yukimemi/dvpm>.

  dvpm.add({ url: "yukimemi/dps-chronicle" });

=head1 Requirements X<chronicle-requirements>

=item [Deno - A modern runtime for JavaScript and TypeScript](https://deno.land/)

=item [vim-denops/denops.vim: üêú An ecosystem of Vim/Neovim which allows developers to write cross-platform plugins in Deno](https://github.com/vim-denops/denops.vim)

=head1 Usage X<chronicle-usage>

No special settings are required.
By default, record the file to bellow.

=item On `BufRead`.

  ~/.cache/dps-chronicle/read

=item On `BufWritePost`.

  ~/.cache/dps-chronicle/write

=head1 Commands X<chronicle-commands>

C<:DisableChronicle>                                        X<:DisableChronicle>
Disable chronicle.

C<:EnableChronicle>                                          X<:EnableChronicle>
Enable chronicle.

C<:OpenChronicleRead>                                      X<:OpenChronicleRead>
Show list of `g:chronicle_read_path` with quickfix.

C<:OpenChronicleWrite>                                    X<:OpenChronicleWrite>
Show list of `g:chronicle_write_path` with quickfix.

C<:ResetChronicleRead>                                    X<:ResetChronicleRead>
Remove `g:chronicle_read_path`.

C<:ResetChronicleWrite>                                  X<:ResetChronicleWrite>
Remove `g:chronicle_write_path`.

=head1 Config X<chronicle-config>

No settings are required. However, the following settings can be made if necessary.

C<g:chronicle_debug>                                        X<g:chronicle_debug>
Enable debug messages.
default is v:false

C<g:chronicle_ignore_filetypes>                  X<g:chronicle_ignore_filetypes>
A list of filetypes to be ignored.
default is ["log"]

C<g:chronicle_echo>                                          X<g:chronicle_echo>
Whether to output echo messages when adding to chronicle list.
default is v:true

C<g:chronicle_notify>                                      X<g:chronicle_notify>
Whether to `vim.notify` messages when adding to chronicle list. (Neovim only)
default is v:false

C<g:chronicle_read_path>                                X<g:chronicle_read_path>
The path saved on BufRead event.
default is `~/.cache/dps-chronicle/read`

C<g:chronicle_write_path>                              X<g:chronicle_write_path>
The path saved on BufWritePost event.
default is `~/.cache/dps-chronicle/write`

=head1 Example X<chronicle-example>

  let g:chronicle_debug = v:false
  let g:chronicle_echo = v:false
  let g:chronicle_notify = v:true
  let g:chronicle_ignore_filetypes = ["csv", "log"]
  let g:chronicle_read_path = "~/.cache/chronicle/read"
  let g:chronicle_write_path = "~/.cache/chronicle/write"
  nnoremap mr <cmd>OpenChronicleRead<cr>
  nnoremap mw <cmd>OpenChronicleWrite<cr>

=head1 Special thanks X<chronicle-special-thanks>

The original idea of this plugin comes from L<lambdalisue/mr.vim|https://github.com/lambdalisue/mr.vim>.
Thank you!

=head1 License X<chronicle-license>

Licensed under MIT License.

Copyright (c) 2023 yukimemi

=cut
